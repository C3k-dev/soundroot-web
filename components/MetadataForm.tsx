"use client";

import { useState } from "react";
import { saveMetadata } from "@/lib/api";

interface Props {
  trackId: string;
  chatId: string;
}

export default function MetadataForm({ trackId, chatId }: Props) {
  const [form, setForm] = useState({
    title: "",
    artist: "",
    album: "",
    year: "",
    genre: "",
    coverUrl: "",
  });

  const [loading, setLoading] = useState(false);

  async function handleSubmit(e: React.FormEvent) {
    e.preventDefault();
    setLoading(true);

    await saveMetadata(trackId, chatId, form);

    setLoading(false);
    alert("‚úÖ –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Telegram!");
  }

  return (
    <form onSubmit={handleSubmit} style={{ display: "grid", gap: 12 }}>
      <input
        type="text"
        placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ"
        value={form.title}
        onChange={(e) => setForm({ ...form, title: e.target.value })}
      />
      <input
        type="text"
        placeholder="–ê—Ä—Ç–∏—Å—Ç"
        value={form.artist}
        onChange={(e) => setForm({ ...form, artist: e.target.value })}
      />
      <input
        type="text"
        placeholder="–ê–ª—å–±–æ–º"
        value={form.album}
        onChange={(e) => setForm({ ...form, album: e.target.value })}
      />
      <input
        type="text"
        placeholder="–ì–æ–¥"
        value={form.year}
        onChange={(e) => setForm({ ...form, year: e.target.value })}
      />
      <input
        type="text"
        placeholder="–ñ–∞–Ω—Ä"
        value={form.genre}
        onChange={(e) => setForm({ ...form, genre: e.target.value })}
      />
      <input
        type="text"
        placeholder="URL –æ–±–ª–æ–∂–∫–∏"
        value={form.coverUrl}
        onChange={(e) => setForm({ ...form, coverUrl: e.target.value })}
      />

      <button type="submit" disabled={loading}>
        {loading ? "–°–æ—Ö—Ä–∞–Ω—è–µ–º..." : "üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å"}
      </button>
    </form>
  );
}
